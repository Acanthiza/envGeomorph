% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_raster_cell.R
\name{add_raster_cell}
\alias{add_raster_cell}
\title{Add cell to df with lat/long}
\usage{
add_raster_cell(
  ras,
  df,
  x = "long",
  y = "lat",
  crs_df = 4326,
  add_xy = FALSE,
  return_old_xy = FALSE,
  add_val = FALSE,
  force_new = TRUE
)
}
\arguments{
\item{ras}{SpatRaster, or path to raster (needs to be path if running in
parallel), with cell numbers to extract}

\item{df}{Dataframe with x/y columns}

\item{x, y}{Character. Name of columns in \code{df} with x and y coordinates}

\item{crs_df}{Single length vector. What crs are x and y?}

\item{add_xy}{Logical. Generate (centroid) x and y coords from cell? If TRUE,
these will be returned as \code{cell_x} and \code{cell_y} where 'x' and 'y' are as
defined by arguments \code{x} and \code{y}.}

\item{return_old_xy}{Logical. If true, the original x and y values will be
returned as \code{old_x} and \code{old_y} where 'x' and 'y' are as defined by arguments
\code{x} and \code{y}.}

\item{add_val}{Logical. If true the value(s) for cell will be extracted using
\code{terra::extract()}.The names of any columns resulting from \code{add_val} will be
the same as the names in \code{ras}.}

\item{force_new}{Logical. If there is already a column \code{cell} in \code{df}, remove
it first?}
}
\value{
\code{df} with additional column \code{cell} with cell numbers from ras.
Depending on the value of \code{add_xy} and \code{return_old_xy}, extra columns for
centroid x and y values and old x and y values respetively. If \code{add_val} any
values from \code{ras}. Note that, irrespective of the crs of \code{ras},
any returned x and y values will be in \code{crs_df}.
}
\description{
Add cell to df with lat/long
}
\examples{

  #library(envRaster)

  out_dir <- file.path(system.file(package = "envRaster"), "examples")

  base_file <- fs::path(out_dir, "cube", "base.tif")

  if(!file.exists(base_file)) {

    make_base_grid(aoi
                   , out_res = 30
                   , out_epsg = 8059
                   , out_file = base_file
                   , datatype = "INT1U"
                   , overwrite = TRUE
                   )
  }

  base <- terra::rast(base_file)

  # random sample of points within the aoi
  sample <- matrix(nrow = 2, ncol = 2) \%>\% # include some NA x and y values
    rbind(sf::st_sample(aoi, 100) \%>\%
            sf::st_transform(crs = 4326) \%>\%
            sf::st_coordinates()
          ) \%>\%
    tibble::as_tibble() \%>\%
    dplyr::mutate(attribute = sample(letters[1:10], nrow(.), replace = TRUE))

  # add just cell to sample
  add_raster_cell(base
                  , sample
                  , x = "X"
                  , y = "Y"
                  )

  # add cell and cell centroids to sample
  add_raster_cell(base
                  , sample
                  , add_xy = TRUE
                  , x = "X"
                  , y = "Y"
                  )

  # add cell, cell centroids and original 'x' and 'y' to sample
  add_raster_cell(base
                  , sample
                  , add_xy = TRUE
                  , return_old_xy = TRUE
                  , x = "X"
                  , y = "Y"
                  )

  # add cell, cell centroids, cell values and original 'x' and 'y' to sample
  add_raster_cell(base
                  , sample
                  , add_xy = TRUE
                  , return_old_xy = TRUE
                  , add_val = TRUE
                  , x = "X"
                  , y = "Y"
                  )


}
